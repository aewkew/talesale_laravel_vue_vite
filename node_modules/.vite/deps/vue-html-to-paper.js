import {
  __commonJS
} from "./chunk-FAW2VN4A.js";

// node_modules/vue-html-to-paper/dist/index.js
var require_dist = __commonJS({
  "node_modules/vue-html-to-paper/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function addStyles(win, styles) {
      styles.forEach((style) => {
        let link = win.document.createElement("link");
        link.setAttribute("rel", "stylesheet");
        link.setAttribute("type", "text/css");
        link.setAttribute("href", style);
        win.document.getElementsByTagName("head")[0].appendChild(link);
      });
    }
    function openWindow(url, name, props) {
      let windowRef = null;
      windowRef = window.open(url, name, props);
      if (!windowRef.opener) {
        windowRef.opener = self;
      }
      windowRef.focus();
      return windowRef;
    }
    var VueHtmlToPaper = {
      install(Vue, options = {}) {
        Vue.prototype.$htmlToPaper = (el, localOptions, cb = () => true) => {
          let defaultName = "_blank", defaultSpecs = ["fullscreen=yes", "titlebar=yes", "scrollbars=yes"], defaultReplace = true, defaultStyles = [];
          let {
            name = defaultName,
            specs = defaultSpecs,
            replace = defaultReplace,
            styles = defaultStyles
          } = options;
          if (!!localOptions) {
            if (localOptions.name)
              name = localOptions.name;
            if (localOptions.specs)
              specs = localOptions.specs;
            if (localOptions.replace)
              replace = localOptions.replace;
            if (localOptions.styles)
              styles = localOptions.styles;
          }
          specs = !!specs.length ? specs.join(",") : "";
          const element = window.document.getElementById(el);
          if (!element) {
            alert(`Element to print #${el} not found!`);
            return;
          }
          const url = "";
          const win = openWindow(url, name, specs);
          win.document.write(`
        <html>
          <head>
            <title>${window.document.title}</title>
          </head>
          <body>
            ${element.innerHTML}
          </body>
        </html>
      `);
          addStyles(win, styles);
          setTimeout(() => {
            win.document.close();
            win.focus();
            win.print();
            setTimeout(function() {
              window.close();
            }, 1);
            cb();
          }, 1e3);
          return true;
        };
      }
    };
    exports.default = VueHtmlToPaper;
  }
});

// dep:vue-html-to-paper
var vue_html_to_paper_default = require_dist();
export {
  vue_html_to_paper_default as default
};
//# sourceMappingURL=vue-html-to-paper.js.map
